worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # Define an upstream for your Flask Gunicorn app
    # 'web' here is the name of your service in docker-compose.yml
    # Nginx will resolve 'web' to the IP address of the Flask container
    upstream mstg_proposal_app {
        server web:5000; # The service name 'web' and the internal port Gunicorn is listening on
    }

    server {
        listen 80; # Nginx listens on port 80 for incoming HTTP requests
        server_name localhost; # Replace with your domain name in production

        # Serve static files (if you have any, e.g., in a 'static' folder)
        # For now, we don't have static files defined, but this is where you'd put it.
        # If your Flask app serves static files directly, you might remove this.
        # Example if static files are in /app/static inside the Flask container:
        # location /static/ {
        #     alias /app/static/; # Path inside the Flask container
        # }

        location / {
            # Proxy requests to the Gunicorn application
            proxy_pass http://mstg_proposal_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        # Optional: Proxy a specific health check endpoint
        location /health {
            proxy_pass http://mstg_proposal_app;
        }
    }
}
